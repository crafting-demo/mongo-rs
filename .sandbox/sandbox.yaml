overview: |
  Mongo sharded dev cluster provisioned via external repo manifest scripts.

volumes:
  - name: cfg1-data
  - name: sharda1-data
  - name: sharda2-data
  - name: sharda3-data
  - name: shardb1-data
  - name: shardb2-data
  - name: shardb3-data

endpoints:
  - name: mongodb
    type: INTERNAL
    tcp:
      backend:
        target: mongos
        port: mongos

workspaces:
  - name: app
    checkouts:
      - path: repo/mongo-rs
        repo:
          git: https://github.com/crafting-demo/mongo-rs.git
        manifest:
          overlays:
            - name: setup
              content: |
                hooks:
                  post-checkout:
                    cmd: |
                      chmod +x scripts/*.sh
    env:
      - MONGODB_URI=mongodb://mongos:27017/admin
    ports:
      - name: app
        port: 3000
        protocol: HTTP/TCP

containers:
  - name: cfg1
    image: mongo:7.0
    args: ["--configsvr","--replSet","cfgRS","--port","27019","--bind_ip_all"]
    ports: [{ name: cfg, port: 27019, protocol: TCP }]
    volume_mounts: [{ name: cfg1-data, path: /data/db }]
    wait_for: []

  - name: sharda1
    image: mongo:7.0
    args: ["--shardsvr","--replSet","shardA","--port","27018","--bind_ip_all"]
    ports: [{ name: sharda, port: 27018, protocol: TCP }]
    volume_mounts: [{ name: sharda1-data, path: /data/db }]
    wait_for: [cfg1]

  - name: sharda2
    image: mongo:7.0
    args: ["--shardsvr","--replSet","shardA","--port","27018","--bind_ip_all"]
    ports: [{ name: sharda2, port: 27018, protocol: TCP }]
    volume_mounts: [{ name: sharda2-data, path: /data/db }]
    wait_for: [cfg1]

  - name: sharda3
    image: mongo:7.0
    args: ["--shardsvr","--replSet","shardA","--port","27018","--bind_ip_all"]
    ports: [{ name: sharda3, port: 27018, protocol: TCP }]
    volume_mounts: [{ name: sharda3-data, path: /data/db }]
    wait_for: [cfg1]

  - name: shardb1
    image: mongo:7.0
    args: ["--shardsvr","--replSet","shardB","--port","27018","--bind_ip_all"]
    ports: [{ name: shardb, port: 27018, protocol: TCP }]
    volume_mounts: [{ name: shardb1-data, path: /data/db }]
    wait_for: [cfg1]

  - name: shardb2
    image: mongo:7.0
    args: ["--shardsvr","--replSet","shardB","--port","27018","--bind_ip_all"]
    ports: [{ name: shardb2, port: 27018, protocol: TCP }]
    volume_mounts: [{ name: shardb2-data, path: /data/db }]
    wait_for: [cfg1]

  - name: shardb3
    image: mongo:7.0
    args: ["--shardsvr","--replSet","shardB","--port","27018","--bind_ip_all"]
    ports: [{ name: shardb3, port: 27018, protocol: TCP }]
    volume_mounts: [{ name: shardb3-data, path: /data/db }]
    wait_for: [cfg1]

  - name: mongos
    image: mongo:7.0
    args: ["mongos","--configdb","cfgRS/cfg1:27019","--bind_ip_all","--port","27017"]
    ports: [{ name: mongos, port: 27017, protocol: TCP }]
    wait_for: [cfg1, sharda1, sharda2, sharda3, shardb1, shardb2, shardb3]

resources:
  - name: mongo-cluster
    wait_for: [mongos]
    handlers:
      on_create:
        use_workspace:
          name: app
          run:
            cmd: ./scripts/bootstrap.sh
            dir: repo/mongo-rs
      on_resume:
        use_workspace:
          name: app
          run:
            cmd: ./scripts/bootstrap.sh
            dir: repo/mongo-rs


